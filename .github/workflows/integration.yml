name: Integration Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 6 * * *'  # Daily at 6 AM

jobs:
  integration-test:
    name: Integration Tests with Kind
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Kind cluster
      uses: helm/kind-action@v1.12.0
      with:
        cluster_name: test-cluster
        config: |
          kind: Cluster
          apiVersion: kind.x-k8s.io/v1alpha4
          nodes:
          - role: control-plane
            kubeadmConfigPatches:
            - |
              kind: InitConfiguration
              nodeRegistration:
                kubeletExtraArgs:
                  node-labels: "ingress-ready=true"
            extraPortMappings:
            - containerPort: 80
              hostPort: 80
              protocol: TCP
            - containerPort: 443
              hostPort: 443
              protocol: TCP
          - role: worker
          - role: worker
        
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      
    - name: Set up Python
      run: uv python install 3.9
      
    - name: Install dependencies
      run: |
        uv sync --all-extras
        
    - name: Wait for cluster to be ready
      run: |
        kubectl wait --for=condition=Ready nodes --all --timeout=300s
        kubectl cluster-info
        kubectl get nodes -o wide
        
    - name: Install metrics server
      run: |
        kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml
        kubectl patch deployment metrics-server -n kube-system --type='json' -p='[{"op": "add", "path": "/spec/template/spec/containers/0/args/-", "value": "--kubelet-insecure-tls"}]'
        
    - name: Run integration tests
      run: |
        # Run tests marked as integration
        uv run pytest tests/ -m integration -v --tb=short
        
    - name: Test basic cluster operations
      run: |
        # Test basic kubectl operations
        kubectl get namespaces
        kubectl get pods --all-namespaces
        
        # Test our CLI tool
        uv run python -m kind_cluster_setup.main --help
        
    - name: Test application deployment
      run: |
        # Test deploying a simple application
        kubectl create deployment test-nginx --image=nginx:alpine
        kubectl expose deployment test-nginx --port=80 --type=ClusterIP
        kubectl wait --for=condition=available --timeout=300s deployment/test-nginx
        kubectl get pods -l app=test-nginx
        
    - name: Test cleanup
      run: |
        # Test cleanup operations
        kubectl delete deployment test-nginx
        kubectl delete service test-nginx
        
    - name: Collect logs on failure
      if: failure()
      run: |
        echo "=== Cluster Info ==="
        kubectl cluster-info dump
        echo "=== All Pods ==="
        kubectl get pods --all-namespaces -o wide
        echo "=== Events ==="
        kubectl get events --all-namespaces --sort-by='.lastTimestamp'
        echo "=== Node Describe ==="
        kubectl describe nodes

  e2e-test:
    name: End-to-End Tests
    runs-on: ubuntu-latest
    timeout-minutes: 45
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Kind cluster
      uses: helm/kind-action@v1.12.0
      with:
        cluster_name: e2e-cluster
        
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      
    - name: Set up Python
      run: uv python install 3.9
      
    - name: Install dependencies
      run: uv sync --all-extras
      
    - name: Setup Node.js for frontend
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: kind-setup-frontend/package-lock.json
        
    - name: Install frontend dependencies
      working-directory: ./kind-setup-frontend
      run: npm ci
      
    - name: Build frontend
      working-directory: ./kind-setup-frontend
      run: npm run build
      
    - name: Start backend server
      run: |
        uv run uvicorn src.kind_cluster_setup.api.main:app --host 0.0.0.0 --port 8000 &
        sleep 10
        
    - name: Start frontend server
      working-directory: ./kind-setup-frontend
      run: |
        npm start &
        sleep 15
        
    - name: Test API endpoints
      run: |
        # Test health endpoint
        curl -f http://localhost:8000/health || exit 1
        
        # Test clusters endpoint
        curl -f http://localhost:8000/api/clusters || exit 1
        
    - name: Test frontend accessibility
      run: |
        # Test if frontend is accessible
        curl -f http://localhost:3000 || exit 1
        
    - name: Run E2E tests (if available)
      working-directory: ./kind-setup-frontend
      run: |
        # Add E2E tests here when available
        echo "E2E tests would run here"
        
    - name: Cleanup processes
      if: always()
      run: |
        pkill -f uvicorn || true
        pkill -f "npm start" || true
