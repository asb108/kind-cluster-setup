name: Security Scan

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * 1'  # Weekly on Monday at 2 AM

jobs:
  trivy-scan:
    name: Trivy Vulnerability Scanner
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run Trivy vulnerability scanner in repo mode
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'
        
    - name: Run Trivy scanner for Docker images
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'config'
        scan-ref: '.'
        format: 'table'

  python-security:
    name: Python Security Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      
    - name: Set up Python
      run: uv python install 3.9
      
    - name: Install dependencies
      run: uv sync --all-extras
      
    - name: Run Safety check for known vulnerabilities
      run: |
        uv tool install safety
        uv export --format requirements-txt | uv tool run safety check --stdin --json --output safety-report.json
      continue-on-error: true
      
    - name: Upload Safety scan results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: safety-results
        path: safety-report.json

    - name: Run Bandit security linter
      uses: tj-actions/bandit@v5.1
      with:
        options: "-r src/ -f json -o bandit-report.json"

    - name: Upload Bandit scan results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: bandit-results
        path: bandit-report.json

  npm-audit:
    name: NPM Security Audit
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./kind-setup-frontend
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: kind-setup-frontend/package-lock.json
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run npm audit
      run: |
        npm audit --audit-level=moderate --json > npm-audit-report.json
      continue-on-error: true
      
    - name: Upload npm audit results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: npm-audit-results
        path: kind-setup-frontend/npm-audit-report.json

  secrets-scan:
    name: Secrets Detection
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run TruffleHog OSS
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified
