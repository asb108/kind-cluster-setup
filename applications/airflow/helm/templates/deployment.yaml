apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-postgres
  labels:
    app: {{ .Release.Name }}-postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-postgres
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-postgres
    spec:
      containers:
      - name: postgres
        image: postgres:14
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_USER
          value: {{ .Values.postgres.auth.username }}
        - name: POSTGRES_PASSWORD
          value: {{ .Values.postgres.auth.password }}
        - name: POSTGRES_DB
          value: {{ .Values.postgres.auth.database }}
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: postgres-data
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-postgres-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-postgres
  labels:
    app: {{ .Release.Name }}-postgres
spec:
  ports:
  - port: {{ .Values.postgres.service.port }}
    targetPort: 5432
  selector:
    app: {{ .Release.Name }}-postgres
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Release.Name }}-postgres-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.postgres.persistence.size }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-webserver
  labels:
    app: {{ .Release.Name }}-webserver
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-webserver
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-webserver
    spec:
      initContainers:
      - name: wait-for-postgres
        image: busybox
        command: ['sh', '-c', 'until nc -z {{ .Release.Name }}-postgres {{ .Values.postgres.service.port }}; do echo waiting for postgres; sleep 2; done;']
      containers:
      - name: airflow-webserver
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        command: ["airflow", "webserver"]
        ports:
        - containerPort: 8080
        env:
        {{- range $key, $value := .Values.config }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-webserver
  labels:
    app: {{ .Release.Name }}-webserver
spec:
  type: {{ .Values.webserver.service.type }}
  ports:
  - port: {{ .Values.webserver.service.port }}
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: {{ .Release.Name }}-webserver