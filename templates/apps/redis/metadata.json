{
  "display_name": "Redis Cache",
  "description": "Deploy a Redis in-memory data store with clustering, persistence, and monitoring options",
  "version": "7.0",
  "icon": "https://redis.io/images/redis-white.png",
  "category": "Databases",
  "tags": ["cache", "redis", "nosql", "in-memory"],
  "deployment_methods": ["kubectl", "helm"],
  "min_kubernetes_version": "1.20.0",
  "parameters": {
    "app_name": {
      "type": "string",
      "ui_control": "text",
      "label": "Application Name",
      "description": "Name for the Redis instance",
      "default": "redis",
      "required": true,
      "validation": {
        "pattern": "^[a-z0-9-]+$",
        "min": 3,
        "max": 50
      },
      "group": "basic"
    },
    "redis_version": {
      "type": "enum",
      "ui_control": "select",
      "label": "Redis Version",
      "description": "Redis version to deploy",
      "default": "7.0",
      "validation": {
        "options": ["6.2", "7.0", "7.2"]
      },
      "group": "basic"
    },
    "deployment_mode": {
      "type": "enum",
      "ui_control": "select",
      "label": "Deployment Mode",
      "description": "Redis deployment configuration",
      "default": "standalone",
      "validation": {
        "options": ["standalone", "master-slave", "cluster"]
      },
      "group": "basic"
    },
    "password": {
      "type": "string",
      "ui_control": "password",
      "label": "Redis Password",
      "description": "Password for Redis authentication (leave empty for no auth)",
      "default": "",
      "validation": {
        "min": 0,
        "max": 128
      },
      "group": "basic"
    },
    "replicas": {
      "type": "number",
      "ui_control": "slider",
      "label": "Replica Count",
      "description": "Number of Redis replicas",
      "default": 1,
      "validation": {
        "min": 1,
        "max": 6
      },
      "dependencies": {
        "show_when": {"deployment_mode": ["master-slave", "cluster"]}
      },
      "group": "scaling"
    },
    "cpu_request": {
      "type": "string",
      "ui_control": "text",
      "label": "CPU Request",
      "description": "CPU resource request (e.g., 100m, 0.5)",
      "default": "100m",
      "validation": {
        "pattern": "^[0-9]+(m|\\.[0-9]+)?$"
      },
      "group": "resources"
    },
    "memory_request": {
      "type": "string",
      "ui_control": "text",
      "label": "Memory Request",
      "description": "Memory resource request (e.g., 256Mi, 1Gi)",
      "default": "256Mi",
      "validation": {
        "pattern": "^[0-9]+(Mi|Gi)$"
      },
      "group": "resources"
    },
    "cpu_limit": {
      "type": "string",
      "ui_control": "text",
      "label": "CPU Limit",
      "description": "CPU resource limit (e.g., 500m, 1)",
      "default": "500m",
      "validation": {
        "pattern": "^[0-9]+(m|\\.[0-9]+)?$"
      },
      "group": "resources"
    },
    "memory_limit": {
      "type": "string",
      "ui_control": "text",
      "label": "Memory Limit",
      "description": "Memory resource limit (e.g., 512Mi, 2Gi)",
      "default": "512Mi",
      "validation": {
        "pattern": "^[0-9]+(Mi|Gi)$"
      },
      "group": "resources"
    },
    "enable_persistence": {
      "type": "boolean",
      "ui_control": "checkbox",
      "label": "Enable Persistence",
      "description": "Enable Redis data persistence to disk",
      "default": true,
      "group": "persistence"
    },
    "storage_size": {
      "type": "string",
      "ui_control": "text",
      "label": "Storage Size",
      "description": "Size of persistent storage for Redis data",
      "default": "5Gi",
      "validation": {
        "pattern": "^[0-9]+(Mi|Gi|Ti)$"
      },
      "dependencies": {
        "show_when": {"enable_persistence": true}
      },
      "group": "persistence"
    },
    "storage_class": {
      "type": "string",
      "ui_control": "text",
      "label": "Storage Class",
      "description": "Kubernetes storage class for persistent volume (leave empty for default)",
      "default": "",
      "dependencies": {
        "show_when": {"enable_persistence": true}
      },
      "group": "persistence"
    },
    "persistence_mode": {
      "type": "enum",
      "ui_control": "select",
      "label": "Persistence Mode",
      "description": "Redis persistence strategy",
      "default": "rdb",
      "validation": {
        "options": ["rdb", "aof", "both"]
      },
      "dependencies": {
        "show_when": {"enable_persistence": true}
      },
      "group": "persistence"
    },
    "enable_monitoring": {
      "type": "boolean",
      "ui_control": "checkbox",
      "label": "Enable Monitoring",
      "description": "Enable Redis monitoring with Prometheus metrics",
      "default": false,
      "group": "monitoring"
    },
    "monitoring_port": {
      "type": "number",
      "ui_control": "number",
      "label": "Monitoring Port",
      "description": "Port for Prometheus metrics endpoint",
      "default": 9121,
      "validation": {
        "min": 1024,
        "max": 65535
      },
      "dependencies": {
        "show_when": {"enable_monitoring": true}
      },
      "group": "monitoring"
    },
    "service_type": {
      "type": "enum",
      "ui_control": "select",
      "label": "Service Type",
      "description": "Kubernetes service type for Redis access",
      "default": "ClusterIP",
      "validation": {
        "options": ["ClusterIP", "NodePort", "LoadBalancer"]
      },
      "group": "networking"
    },
    "port": {
      "type": "number",
      "ui_control": "number",
      "label": "Redis Port",
      "description": "Port for Redis connections",
      "default": 6379,
      "validation": {
        "min": 1024,
        "max": 65535
      },
      "group": "networking"
    },
    "max_memory": {
      "type": "string",
      "ui_control": "text",
      "label": "Max Memory",
      "description": "Maximum memory Redis can use (e.g., 256mb, 1gb)",
      "default": "256mb",
      "validation": {
        "pattern": "^[0-9]+(mb|gb)$"
      },
      "group": "advanced"
    },
    "maxmemory_policy": {
      "type": "enum",
      "ui_control": "select",
      "label": "Memory Eviction Policy",
      "description": "Policy for handling memory limits",
      "default": "allkeys-lru",
      "validation": {
        "options": ["noeviction", "allkeys-lru", "volatile-lru", "allkeys-random", "volatile-random", "volatile-ttl"]
      },
      "group": "advanced"
    },
    "enable_cluster_mode": {
      "type": "boolean",
      "ui_control": "checkbox",
      "label": "Enable Cluster Mode",
      "description": "Enable Redis cluster mode for horizontal scaling",
      "default": false,
      "dependencies": {
        "show_when": {"deployment_mode": "cluster"}
      },
      "group": "advanced"
    }
  },
  "parameter_groups": {
    "basic": {
      "label": "Basic Configuration",
      "description": "Essential Redis settings",
      "order": 1,
      "collapsible": false
    },
    "scaling": {
      "label": "Scaling",
      "description": "Replica and scaling configuration",
      "order": 2,
      "collapsible": true,
      "collapsed": false
    },
    "resources": {
      "label": "Resource Limits",
      "description": "CPU and memory resource configuration",
      "order": 3,
      "collapsible": true,
      "collapsed": true
    },
    "persistence": {
      "label": "Persistence",
      "description": "Data persistence configuration",
      "order": 4,
      "collapsible": true,
      "collapsed": true
    },
    "monitoring": {
      "label": "Monitoring",
      "description": "Monitoring and metrics configuration",
      "order": 5,
      "collapsible": true,
      "collapsed": true
    },
    "networking": {
      "label": "Networking",
      "description": "Network and service configuration",
      "order": 6,
      "collapsible": true,
      "collapsed": true
    },
    "advanced": {
      "label": "Advanced Settings",
      "description": "Advanced Redis configuration",
      "order": 7,
      "collapsible": true,
      "collapsed": true
    }
  },
  "resources": {
    "cpu_request": "100m",
    "memory_request": "256Mi",
    "cpu_limit": "500m",
    "memory_limit": "512Mi"
  },
  "networking": {
    "ports": [
      {
        "name": "redis",
        "port": 6379,
        "protocol": "TCP"
      }
    ]
  }
}
